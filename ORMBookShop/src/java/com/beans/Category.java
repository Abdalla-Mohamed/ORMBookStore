package com.beans;
// Generated Mar 29, 2016 3:52:04 PM by Hibernate Tools 4.3.1



import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * Category generated by hbm2java
 */
@Entity
@Table(name="CATEGORY"
    ,schema="BOOKSTORE"
    , uniqueConstraints = @UniqueConstraint(columnNames="CAT_NAME") 
)
public class Category  implements java.io.Serializable {


     private Integer catId;
     private String catName;
     private Set<Book> books = new HashSet<Book>(0);
     private Set<Customer> customers = new HashSet<Customer>(0);

    public Category() {
    }

	
    public Category(Integer catId) {
        this.catId = catId;
    }
    public Category(Integer catId, String catName, Set<Book> books, Set<Customer> customers) {
       this.catId = catId;
       this.catName = catName;
       this.books = books;
       this.customers = customers;
    }
   
     @Id 
@SequenceGenerator(name = "ORDER_BOOK_SEQ", sequenceName = "ORDER_BOOK_SEQ")
    @GeneratedValue(strategy = GenerationType.AUTO, generator = "ORDER_BOOK_SEQ")
     @Column(name="CAT_ID", unique=true, nullable=false, precision=22, scale=0)
    public Integer getCatId() {
        return this.catId;
    }
    
    public void setCatId(Integer catId) {
        this.catId = catId;
    }

    
    @Column(name="CAT_NAME", unique=true, length=30)
    public String getCatName() {
        return this.catName;
    }
    
    public void setCatName(String catName) {
        this.catName = catName;
    }

@ManyToMany(fetch=FetchType.EAGER)
    @JoinTable(name="BOOK_CATEGORY", schema="BOOKSTORE", joinColumns = { 
        @JoinColumn(name="CATG_ID", nullable=false, updatable=false) }, inverseJoinColumns = { 
        @JoinColumn(name="BOOK_ID", nullable=false, updatable=false) })
    public Set<Book> getBooks() {
        return this.books;
    }
    
    public void setBooks(Set<Book> books) {
        this.books = books;
    }

@ManyToMany(fetch=FetchType.LAZY)
    @JoinTable(name="INTEREST", schema="BOOKSTORE", joinColumns = { 
        @JoinColumn(name="CAT_ID", nullable=false, updatable=false) }, inverseJoinColumns = { 
        @JoinColumn(name="CUSTOMER_ID", nullable=false, updatable=false) })
    public Set<Customer> getCustomers() {
        return this.customers;
    }
    
    public void setCustomers(Set<Customer> customers) {
        this.customers = customers;
    }




}


